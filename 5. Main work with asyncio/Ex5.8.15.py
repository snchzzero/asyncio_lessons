import asyncio

data = [
    {
        "Имя": "Sarah",
        "Фамилия": "Lewis",
        "Возраст": 54,
        "Навыки": 10,
        "Страна проживания": "Tuvalu",
        "Город проживания": "North Heathertown",
        "Уровень секретности": 1,
        "Псевдоним": "michelestanton",
        "Профессия": "Консультант по безопасности",
        "Владение иностранными языками": {
            "Английский": "Свободно"
        },
        "Специализированные навыки": "Взлом, слежка",
        "Образование": "Военная академия",
        "Предыдущие места работы": "Неизвестно",
        "Хобби и интересы": "Фотография, путешествия",
        "Членство в организациях": "Неизвестно",
        "История путешествий": "Многочисленные страны",
        "Наличие дипломатического паспорта": True,
        "Биометрические данные": "Доступны",
        "Семейное положение": "Неизвестно",
        "Наличие специализированного оборудования": "Есть",
        "Срок доступа": "5857 часов",
        "Тайные операции": [
            "Операция 'Кондор'",
            "Операция 'Снег'"
        ],
        "Скрытые навыки": [
            "Мастер перевоплощений",
            "Эксперт по криптографии"
        ],
        "Контакты в иностранных спецслужбах": "Turner, Craig and Ortiz",
        "Специализация": "Контрразведка"
    },
    {
        "Имя": "Sarah2",
        "Фамилия": "Lewis2",
        "Уровень секретности": 2,
        "Срок доступа": "585722 часов"
    },
    {
        "Имя": "Sarah3",
        "Фамилия": "Lewis3",
        "Уровень секретности": 3,
        "Срок доступа": "585733 часов"
    },
    {
        "Имя": "Sarah4",
        "Фамилия": "Lewis4",
        "Уровень секретности": 4,
        "Срок доступа": None
    },
    {
        "Имя": "Sara5",
        "Фамилия": "Lewis5",
        "Уровень секретности": 20,
        "Срок доступа": "585755 часов"
    },
    {
        "Имя": "Sarah6",
        "Фамилия": "Lewis6",
        "Уровень секретности": 10,
        "Срок доступа": "585766 часов"
    }
]

async def check_access(participant):

    first_name = participant["Имя"]
    last_name = participant["Фамилия"]
    access_for = participant["Срок доступа"]
    sleep_time = participant["Уровень секретности"]

    await asyncio.sleep(sleep_time)

    if not access_for:
        raise ValueError(
            f'Ошибка доступа: '
            f'У участника {first_name} {last_name} '
            f'срок доступа истек или не указан.')
    return f'Участник {first_name} {last_name} имеет действующий доступ. Продолжительность доступа: {access_for}'


async def main():
    tasks = [
        asyncio.create_task(
            coro=check_access(participant),
            name=f'{participant["Имя"]} {participant["Фамилия"]}'
        )
        for participant in data
    ]

    done, pending = await asyncio.wait(tasks, return_when=asyncio.FIRST_EXCEPTION)

    for task in tasks:
        if task in done:
            if task.exception():
                print(task.exception())
            else:
                print(task.result())
        if task in pending:
            task.cancel()
            print(f'Доступ участника {task.get_name()} отменен из-за критической ошибки.')


asyncio.run(main())